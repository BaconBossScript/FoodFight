local a=string.char;local b=string.byte;local c=string.sub;local d=bit32 or bit;local e=d.bxor;local f=table.concat;local g=table.insert;local function h(i,j)local k={}for l=1,#i do g(k,a(e(b(c(i,l,l+1)),b(c(j,1+l%#j,1+l%#j+1)))%256))end;return f(k)end;local m=tonumber;local n=string.byte;local o=string.char;local p=string.sub;local q=string.gsub;local r=string.rep;local s=table.concat;local t=table.insert;local u=math.ldexp;local v=getfenv or function()return _ENV end;local w=setmetatable;local x=pcall;local y=select;local z=unpack or table.unpack;local A=tonumber;local function B(C,D,...)local E=0;local F;local G;local H;local I;local J;local K;local L;local M;local N;local O;local P;local Q;while true do if E==2 then function I()local R=0;local S;while true do if R==0 then S=n(C,F,F)F=F+1;R=1 end;if R==1 then return S end end end;J=nil;function J()local T=0;local U;local V;while true do if 1==T then return V*256+U end;if 0==T then U,V=n(C,F,F+2)F=F+2;T=1 end end end;E=3 end;if E==1 then H=nil;function H(W,X,Y)if Y then local Z=0;local _;while true do if Z==0 then _=W/2^(X-1)%(5-3)^(Y-1-(X-1)+1)return _-_%1 end end else local a0=0;local a1;while true do if a0==0 then a1=2^(X-1)return W%(a1+a1)>=a1 and 1 or 0 end end end end;I=nil;E=2 end;if E==6 then P=nil;function P()local a2=0;local a3;local a4;local a5;local a6;local a7;local a8;while true do if a2==0 then a3={}a4={}a5={}a2=1 end;if a2==3 then for a9=1,K()do a4[a9-1]=P()end;return a6 end;if a2==2 then for aa=569-(367+201),a7 do local ab=0;local ac;local ad;while true do if ab==0 then ac=I()ad=nil;ab=1 end;if ab==1 then if ac==1 then ad=I()~=927-(214+713)elseif ac==2 then ad=L()elseif ac==3 then ad=M()end;a8[aa]=ad;break end end end;a6[3]=I()for ae=1,K()do local af=0;local ag;while true do if af==0 then ag=I()if H(ag,1,1)==0 then local ah=0;local ai;local aj;local ak;while true do if ah==3 then if H(aj,3,3)==1 then ak[5-1]=a8[ak[4]]end;a3[ae]=ak;break end;if ah==0 then ai=H(ag,2,3)aj=H(ag,4,6)ah=1 end;if 1==ah then ak={J(),J(),nil,nil}if ai==0 then ak[3]=J()ak[4]=J()elseif ai==1 then ak[3]=K()elseif ai==1+1 then ak[3]=K()-2^16 elseif ai==3 then local al=0;while true do if al==0 then ak[3]=K()-(1+1)^(893-(282+595))ak[4]=J()break end end end;ah=2 end;if ah==2 then if H(aj,1,1)==1638-(1523+114)then ak[2]=a8[ak[2]]end;if H(aj,2,2)==1+0 then ak[3]=a8[ak[3]]end;ah=3 end end end;break end end end;a2=3 end;if a2==1 then a6={a3,a4,nil,a5}a7=K()a8={}a2=2 end end end;Q=nil;E=7 end;if E==4 then function L()local am=0;local an;local ao;local ap;local aq;local ar;local as;while true do if am==1 then ap=1;aq=H(ao,1,20)*2^32+an;am=2 end;if am==2 then ar=H(ao,21,31)as=H(ao,61-29)==1 and-1 or 1;am=3 end;if 0==am then an=K()ao=K()am=1 end;if am==3 then if ar==0 then if aq==0 then return as*0 else local at=0;while true do if at==0 then ar=1;ap=0;break end end end elseif ar==2047 then return aq==0-0 and as*1/0 or as*NaN end;return u(as,ar-(1642-(555+64)))*(ap+aq/2^52)end end end;M=nil;function M(au)local av=0;local aw;local ax;while true do if av==1 then aw=p(C,F,F+au-1)F=F+au;av=2 end;if av==2 then ax={}for ay=1,#aw do ax[ay]=o(n(p(aw,ay,ay)))end;av=3 end;if 3==av then return s(ax)end;if 0==av then aw=nil;if not au then local az=0;while true do if az==0 then au=K()if au==0 then return""end;break end end end;av=1 end end end;E=5 end;if 5==E then N=K;O=nil;function O(...)return{...},y("#",...)end;E=6 end;if E==7 then function Q(aA,aB,aC)local aD=aA[1]local aE=aA[2]local aF=aA[3]return function(...)local aG=aD;local aH=aE;local aI=aF;local aJ=O;local aK=1;local aL=-1;local aM={}local aN={...}local aO=y("#",...)-1;local aP={}local aQ={}for aR=0,aO do if aR>=aI then aM[aR-aI]=aN[aR+1]else aQ[aR]=aN[aR+1]end end;local aS=aO-aI+1;local aT;local aU;while true do local aV=0;while true do if aV==0 then aT=aG[aK]aU=aT[1]aV=1 end;if aV==1 then if aU<=52 then if aU<=25 then if aU<=12 then if aU<=5 then if aU<=1067-(68+997)then if aU<=0 then local aW=0;local aX;local aY;local aZ;local a_;while true do if aW==1 then aL=aZ+aX-1;a_=0;aW=2 end;if aW==2 then for b0=aX,aL do local b1=0;while true do if b1==0 then a_=a_+1;aQ[b0]=aY[a_]break end end end;break end;if aW==0 then aX=aT[1272-(226+1044)]aY,aZ=aJ(aQ[aX](z(aQ,aX+1,aT[3])))aW=1 end end elseif aU==1 then local b2=aT[2]local b3=aQ[aT[3]]aQ[b2+4-3]=b3;aQ[b2]=b3[aT[4]]else aQ[aT[2]]=aQ[aT[3]][aT[4]]end elseif aU<=3 then aQ[aT[119-(32+85)]]=aT[3]+aQ[aT[4]]elseif aU==4 then if aQ[aT[2]]==aT[4]then aK=aK+1 else aK=aT[3]end else aQ[aT[2+0]]=aQ[aT[1+2]]%aT[4]end elseif aU<=965-(892+65)then if aU<=14-8 then aC[aT[3]]=aQ[aT[3-1]]elseif aU==7 then aQ[aT[2]]=#aQ[aT[3]]else aQ[aT[2]]=aQ[aT[4-1]]/aQ[aT[4]]end elseif aU<=10 then if aU>9 then aQ[aT[2]]=aQ[aT[3]]+aT[4]elseif not aQ[aT[2]]then aK=aK+1 else aK=aT[3]end elseif aU>361-(87+263)then if not aQ[aT[2]]then aK=aK+1 else aK=aT[3]end elseif aQ[aT[182-(67+113)]]~=aT[4]then aK=aK+1 else aK=aT[3]end elseif aU<=18 then if aU<=15 then if aU<=13 then aQ[aT[2]]=aQ[aT[3]]%aT[3+1]elseif aU>14 then local b4=aT[2]aQ[b4](z(aQ,b4+1,aL))else local b5=aT[2]aQ[b5]=aQ[b5](z(aQ,b5+1,aL))end elseif aU<=16 then local b6=0;local b7;local b8;while true do if b6==0 then b7=aT[7-4]b8=aQ[b7]b6=1 end;if b6==1 then for b9=b7+1,aT[4]do b8=b8 ..aQ[b9]end;aQ[aT[2]]=b8;break end end elseif aU==13+4 then local ba=0;local bb;local bc;local bd;while true do if ba==0 then bb=aT[2]bc={aQ[bb](aQ[bb+1])}ba=1 end;if ba==1 then bd=0;for be=bb,aT[15-11]do bd=bd+1;aQ[be]=bc[bd]end;break end end else aQ[aT[2]]=aB[aT[955-(802+150)]]end elseif aU<=21 then if aU<=19 then local bf=0;local bg;local bh;local bi;while true do if 2==bf then if bh>0 then if bi<=aQ[bg+1]then local bj=0;while true do if bj==0 then aK=aT[3]aQ[bg+3]=bi;break end end end elseif bi>=aQ[bg+1]then aK=aT[3]aQ[bg+3]=bi end;break end;if bf==1 then bi=aQ[bg]+bh;aQ[bg]=bi;bf=2 end;if bf==0 then bg=aT[2]bh=aQ[bg+5-3]bf=1 end end elseif aU>20 then local bk=aT[2]local bl={aQ[bk](z(aQ,bk+1,aL))}local bm=0;for bn=bk,aT[3+1]do local bo=0;while true do if 0==bo then bm=bm+1;aQ[bn]=bl[bm]break end end end else aQ[aT[2]]=aT[3]end elseif aU<=23 then if aU==22 then local bp=0;local bq;local br;local bs;local bt;while true do if bp==0 then bq=aT[2]br,bs=aJ(aQ[bq](z(aQ,bq+1,aT[3])))bp=1 end;if bp==1 then aL=bs+bq-(998-(915+82))bt=0;bp=2 end;if 2==bp then for bu=bq,aL do local bv=0;while true do if 0==bv then bt=bt+1;aQ[bu]=br[bt]break end end end;break end end else local bw=0;local bx;while true do if bw==0 then bx=aT[2]aQ[bx]=aQ[bx](z(aQ,bx+1,aL))break end end end elseif aU>24 then aQ[aT[5-3]]=aC[aT[3]]elseif aQ[aT[2]]==aQ[aT[4]]then aK=aK+1 else aK=aT[3]end elseif aU<=38 then if aU<=19+12 then if aU<=28 then if aU<=26 then aQ[aT[2]]=aC[aT[3]]elseif aU>27 then local by=0;local bz;local bA;local bB;while true do if 2==by then if bA>1187-(1069+118)then if bB<=aQ[bz+1]then local bC=0;while true do if bC==0 then aK=aT[3]aQ[bz+3]=bB;break end end end elseif bB>=aQ[bz+1]then aK=aT[3]aQ[bz+3]=bB end;break end;if by==1 then bB=aQ[bz]+bA;aQ[bz]=bB;by=2 end;if by==0 then bz=aT[2-0]bA=aQ[bz+2]by=1 end end else local bD=0;local bE;while true do if bD==0 then bE=aT[2]aQ[bE](aQ[bE+1])break end end end elseif aU<=29 then aQ[aT[2]][aQ[aT[3]]]=aT[4]elseif aU==68-38 then local bF=aT[2]local bG=aQ[bF]for bH=bF+1,aL do t(bG,aQ[bH])end else do return aQ[aT[2]]()end end elseif aU<=34 then if aU<=32 then aK=aT[3]elseif aU>33 then aQ[aT[2]]=aQ[aT[3]]%aQ[aT[4]]else local bI=0;local bJ;while true do if 0==bI then bJ=aT[2]aQ[bJ]=aQ[bJ](aQ[bJ+1])break end end end elseif aU<=36 then if aU==35 then if aQ[aT[2]]~=aT[8-4]then aK=aK+1 else aK=aT[3]end else local bK=aT[2]aQ[bK](aQ[bK+1])end elseif aU==37 then do return end else local bL=aT[2]local bM={aQ[bL](z(aQ,bL+1,aL))}local bN=0;for bO=bL,aT[4]do bN=bN+1;aQ[bO]=bM[bN]end end elseif aU<=45 then if aU<=41 then if aU<=39 then do return end elseif aU>7+33 then local bP=aT[2]aQ[bP]=aQ[bP]()else aQ[aT[2]]=aT[3]end elseif aU<=43 then if aU==42 then local bQ=0;local bR;while true do if bQ==0 then bR=aT[2]aQ[bR]=aQ[bR]()break end end else for bS=aT[3-1],aT[3+0]do aQ[bS]=nil end end elseif aU==44 then aQ[aT[2]][aQ[aT[3]]]=aQ[aT[4]]else local bT=aT[2]local bU=aQ[bT]local bV=aQ[bT+2]if bV>0 then if bU>aQ[bT+1]then aK=aT[3]else aQ[bT+3]=bU end elseif bU<aQ[bT+1]then aK=aT[3]else aQ[bT+794-(368+423)]=bU end end elseif aU<=48 then if aU<=46 then aQ[aT[2]]=aQ[aT[3]]+aT[4]elseif aU>47 then local bW=0;local bX;local bY;local bZ;while true do if 0==bW then bX=aH[aT[3]]bY=nil;bW=1 end;if bW==1 then bZ={}bY=w({},{[h("\249\221\43\233\88\242\222","\151\166\130\66\135\60")]=function(b_,c0)local c1=bZ[c0]return c1[1][c1[2]]end,[h("\6\15\74\116\46\57\74\117\60\40","\17\89\80\36")]=function(c2,c3,c4)local c5=0;local c6;while true do if c5==0 then c6=bZ[c3]c6[1][c6[2]]=c4;break end end end})bW=2 end;if bW==2 then for c7=1,aT[4]do local c8=0;local c9;while true do if c8==1 then if c9[1]==77 then bZ[c7-1]={aQ,c9[3]}else bZ[c7-1]={aB,c9[21-(10+8)]}end;aP[#aP+3-2]=bZ;break end;if 0==c8 then aK=aK+3-2;c9=aG[aK]c8=1 end end end;aQ[aT[2]]=Q(bX,bY,aC)break end end else local ca=0;local cb;while true do if ca==0 then cb=aT[2]aQ[cb](z(aQ,cb+1,aL))break end end end elseif aU<=50 then if aU==49 then if aQ[aT[2]]==aQ[aT[4]]then aK=aK+1 else aK=aT[3]end else aQ[aT[2]]()end elseif aU==51 then aC[aT[3]]=aQ[aT[2]]else local cc=0;local cd;local ce;local cf;while true do if cc==0 then cd=aT[2]ce={aQ[cd](aQ[cd+1])}cc=1 end;if cc==1 then cf=0;for cg=cd,aT[4]do cf=cf+1;aQ[cg]=ce[cf]end;break end end end elseif aU<=78 then if aU<=65 then if aU<=58 then if aU<=55 then if aU<=53 then local ch=0;local ci;local cj;local ck;local cl;while true do if 0==ch then ci=aT[2]cj,ck=aJ(aQ[ci](z(aQ,ci+1,aL)))ch=1 end;if ch==1 then aL=ck+ci-1;cl=0;ch=2 end;if ch==2 then for cm=ci,aL do cl=cl+1;aQ[cm]=cj[cl]end;break end end elseif aU>54 then local cn=0;local co;local cp;local cq;while true do if cn==1 then cq={}cp=w({},{[h("\74\69\115\192\113\127\98","\174\21\26\26")]=function(cr,cs)local ct=0;local cu;while true do if ct==0 then cu=cq[cs]return cu[1][cu[6-4]]end end end,[h("\8\158\186\21\32\168\186\20\50\185","\112\87\193\212")]=function(cv,cw,cx)local cy=cq[cw]cy[1][cy[2]]=cx end})cn=2 end;if 0==cn then co=aH[aT[3]]cp=nil;cn=1 end;if cn==2 then for cz=1,aT[2+2]do aK=aK+1;local cA=aG[aK]if cA[1]==77 then cq[cz-1]={aQ,cA[4-1]}else cq[cz-1]={aB,cA[3]}end;aP[#aP+1]=cq end;aQ[aT[2]]=Q(co,cp,aC)break end end else local cB=aT[2]aQ[cB](z(aQ,cB+1,aT[3]))end elseif aU<=56 then local cC=0;local cD;while true do if cC==0 then cD=aT[2]do return aQ[cD](z(aQ,cD+1,aT[3]))end;break end end elseif aU==57 then local cE=0;local cF;local cG;local cH;local cI;while true do if cE==1 then aL=cH+cF-1;cI=0;cE=2 end;if cE==2 then for cJ=cF,aL do local cK=0;while true do if 0==cK then cI=cI+1;aQ[cJ]=cG[cI]break end end end;break end;if cE==0 then cF=aT[2]cG,cH=aJ(aQ[cF](aQ[cF+1]))cE=1 end end else aQ[aT[2]]=Q(aH[aT[3]],nil,aC)end elseif aU<=61 then if aU<=497-(145+293)then local cL=0;local cM;local cN;while true do if cL==1 then for cO=1487-(998+488),#aP do local cP=0;local cQ;while true do if cP==0 then cQ=aP[cO]for cR=0,#cQ do local cS=cQ[cR]local cT=cS[1]local cU=cS[2]if cT==aQ and cU>=cM then cN[cU]=cT[cU]cS[1]=cN end end;break end end end;break end;if 0==cL then cM=aT[432-(44+386)]cN={}cL=1 end end elseif aU>60 then aQ[aT[1+1]]=aQ[aT[3]]else local cV=aT[2]local cW={}for cX=1,#aP do local cY=0;local cZ;while true do if 0==cY then cZ=aP[cX]for c_=0,#cZ do local d0=0;local d1;local d2;local d3;while true do if d0==0 then d1=cZ[c_]d2=d1[1]d0=1 end;if d0==1 then d3=d1[2]if d2==aQ and d3>=cV then local d4=0;while true do if d4==0 then cW[d3]=d2[d3]d1[1]=cW;break end end end;break end end end;break end end end end elseif aU<=63 then if aU==62 then aQ[aT[2+0]][aQ[aT[3]]]=aT[776-(201+571)]else aK=aT[3]end elseif aU==64 then if aT[2]==aQ[aT[1142-(116+1022)]]then aK=aK+1 else aK=aT[3]end elseif aT[2]==aQ[aT[4]]then aK=aK+1 else aK=aT[3]end elseif aU<=71 then if aU<=68 then if aU<=66 then aQ[aT[2]][aT[12-9]]=aT[4]elseif aU==67 then if aQ[aT[2]]~=aQ[aT[4]]then aK=aK+1 else aK=aT[2+1]end else aQ[aT[7-5]][aQ[aT[3]]]=aQ[aT[4]]end elseif aU<=244-175 then local d5=aT[2]local d6,d7=aJ(aQ[d5](aQ[d5+1]))aL=d7+d5-1;local d8=0;for d9=d5,aL do local da=0;while true do if da==0 then d8=d8+1;aQ[d9]=d6[d8]break end end end elseif aU==70 then aQ[aT[861-(814+45)]]=aQ[aT[3]]/aQ[aT[4]]else local db=aT[2]aQ[db](z(aQ,db+1,aT[3]))end elseif aU<=182-108 then if aU<=4+68 then aQ[aT[2]]={}elseif aU>73 then local dc=0;local dd;local de;local df;while true do if dc==1 then df=aQ[dd+1+1]if df>0 then if de>aQ[dd+1]then aK=aT[888-(261+624)]else aQ[dd+3]=de end elseif de<aQ[dd+1]then aK=aT[4-1]else aQ[dd+3]=de end;break end;if dc==0 then dd=aT[2]de=aQ[dd]dc=1 end end else local dg=aT[2]local dh,di=aJ(aQ[dg](z(aQ,dg+1,aL)))aL=di+dg-1;local dj=0;for dk=dg,aL do dj=dj+1;aQ[dk]=dh[dj]end end elseif aU<=76 then if aU==75 then local dl=0;local dm;local dn;while true do if dl==1 then for dp=dm+1,aT[4]do dn=dn..aQ[dp]end;aQ[aT[2]]=dn;break end;if 0==dl then dm=aT[3]dn=aQ[dm]dl=1 end end else aQ[aT[2]][aT[3]]=aT[1084-(1020+60)]end elseif aU>77 then local dq=0;local dr;local ds;while true do if dq==0 then dr=aT[2]ds=aQ[aT[3]]dq=1 end;if 1==dq then aQ[dr+1]=ds;aQ[dr]=ds[aT[4]]break end end else aQ[aT[2]]=aQ[aT[3]]end elseif aU<=91 then if aU<=1507-(630+793)then if aU<=81 then if aU<=267-188 then aQ[aT[2]]=aB[aT[14-11]]elseif aU>32+48 then aQ[aT[2]][aT[3]]=aQ[aT[4]]else aQ[aT[2]]()end elseif aU<=82 then if aQ[aT[2]]==aT[13-9]then aK=aK+1 else aK=aT[3]end elseif aU==83 then local dt=0;local du;local dv;while true do if dt==0 then du=aT[2]dv=aQ[du]dt=1 end;if dt==1 then for dw=du+1,aL do t(dv,aQ[dw])end;break end end else aQ[aT[2]]=#aQ[aT[3]]end elseif aU<=87 then if aU<=85 then aQ[aT[2]]=Q(aH[aT[3]],nil,aC)elseif aU==86 then local dx=0;local dy;while true do if dx==0 then dy=aT[2]do return z(aQ,dy,aL)end;break end end else do return aQ[aT[1749-(760+987)]]()end end elseif aU<=89 then if aU==88 then local dz=0;local dA;while true do if 0==dz then dA=aT[2]aQ[dA]=aQ[dA](z(aQ,dA+1,aT[3]))break end end else aQ[aT[2]]=aQ[aT[3]][aT[4]]end elseif aU>90 then aQ[aT[2]]=aT[3]+aQ[aT[4]]else local dB=aT[2]do return z(aQ,dB,aL)end end elseif aU<=98 then if aU<=94 then if aU<=2005-(1789+124)then if aQ[aT[2]]then aK=aK+1 else aK=aT[3]end elseif aU==93 then aQ[aT[2]]=aQ[aT[3]]*aT[770-(745+21)]else local dC=0;local dD;while true do if dC==0 then dD=aT[2]aQ[dD]=aQ[dD](aQ[dD+1])break end end end elseif aU<=34+62 then if aU==95 then local dE=aT[5-3]aQ[dE]=aQ[dE](z(aQ,dE+3-2,aT[3]))else aQ[aT[2]]=aQ[aT[3]]*aT[4]end elseif aU==97 then local dF=aT[2]local dG=aT[4]local dH=dF+2;local dI={aQ[dF](aQ[dF+1+0],aQ[dH])}for dJ=1,dG do aQ[dH+dJ]=dI[dJ]end;local dK=dI[1]if dK then aQ[dH]=dK;aK=aT[3+0]else aK=aK+1056-(87+968)end elseif aQ[aT[2]]then aK=aK+4-3 else aK=aT[3+0]end elseif aU<=101 then if aU<=99 then if aQ[aT[2]]~=aQ[aT[4]]then aK=aK+1 else aK=aT[3]end elseif aU==100 then aQ[aT[2]][aT[3]]=aQ[aT[4]]else local dL=aT[4-2]local dM=aT[4]local dN=dL+2;local dO={aQ[dL](aQ[dL+1],aQ[dN])}for dP=1,dM do aQ[dN+dP]=dO[dP]end;local dQ=dO[1]if dQ then aQ[dN]=dQ;aK=aT[3]else aK=aK+1 end end elseif aU<=103 then if aU==102 then local dR=aT[2]do return aQ[dR](z(aQ,dR+1414-(447+966),aT[3]))end else for dS=aT[5-3],aT[3]do aQ[dS]=nil end end elseif aU>1921-(1703+114)then aQ[aT[2]]={}else aQ[aT[2]]=aQ[aT[3]]%aQ[aT[4]]end;aK=aK+1;break end end end end end;return Q(P(),{},D)(...)end;if E==3 then K=nil;function K()local dT=0;local dU;local dV;local dW;local dX;while true do if dT==0 then dU,dV,dW,dX=n(C,F,F+3)F=F+4;dT=1 end;if dT==1 then return dX*16777216+dW*65536+dV*256+dU end end end;L=nil;E=4 end;if E==0 then F=1;G=nil;C=q(p(C,15-10),h("\229\58","\67\203\20\223\223\37\33\178"),function(dY)if n(dY,2)==79 then local dZ=0;while true do if dZ==0 then G=m(p(dY,1,1))return""end end else local d_=0;local e0;while true do if d_==0 then e0=o(m(dY,16))if G then local e1=0;local e2;while true do if e1==0 then e2=r(e0,G)G=nil;e1=1 end;if e1==1 then return e2 end end else return e0 end;break end end end end)E=1 end end endv(),...)
